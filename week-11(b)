#include <stdio.h>

// Function to perform binary search in rotated sorted array
int rotatedBinarySearch(int arr[], int low, int high, int key) {
    if (low > high)
        return -1;

    int mid = low + (high - low) / 2;

    if (arr[mid] == key)
        return mid;

    // Check if left half is sorted
    if (arr[low] <= arr[mid]) {
        // Check if key lies in left half
        if (key >= arr[low] && key <= arr[mid])
            return rotatedBinarySearch(arr, low, mid - 1, key);
        else
            return rotatedBinarySearch(arr, mid + 1, high, key);
    }
    // Otherwise right half must be sorted
    else {
        // Check if key lies in right half
        if (key >= arr[mid] && key <= arr[high])
            return rotatedBinarySearch(arr, mid + 1, high, key);
        else
            return rotatedBinarySearch(arr, low, mid - 1, key);
    }
}

int main() {
    int arr[] = { 4, 5, 6, 7, 1, 2, 3 };
    int size = sizeof(arr) / sizeof(arr[0]);
    int key;

    printf("Enter the element to search: ");
    scanf("%d", &key);

    int index = rotatedBinarySearch(arr, 0, size - 1, key);

    if (index != -1)
        printf("Element %d found at index %d.\n", key, index);
    else
        printf("Element %d not found in the array.\n", key);

    return 0;
}

